<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数列学习笔记</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86/summation-note/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86/summation-note/</url>
      
        <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="基本表示"><a href="#基本表示" class="headerlink" title="基本表示"></a>基本表示</h3><ul><li><p><em>e.g.</em> $ \left[ 1, 100 \right] $ 中偶数之和</p><p>有如下几种表示法：</p><ol><li><p>选取 $ \left[ 0, 100 \right] $ 中满足 $ 2 \mid k $ 的 $ k $ 相加：<br>  $$ \sum ^{ 100 } _ {\substack{ k &#x3D; 0 \\ 2 \mid k } } k $$</p></li><li><p>选取 $ \left[ 0, 50 \right] $ 中所有 $ k $ 乘 $ 2 $ 后相加：<br>  $$ \sum ^{ 50 } _ { k &#x3D; 0 } 2k $$</p></li><li><p>选取 $ \left[ 0, 100 \right] $ 中所有 $ k $，若 $ 2 \mid k $，将 $ k $ 相加：<br>  $$ \sum ^{ 100 } _ { k &#x3D; 0} k \left[ 2 \mid k \right] $$</p></li></ol><p><em>Tips:</em> $$ [k \ 满足性质 \ E] &#x3D; \begin{cases} 1 &amp; k \ 满足性质 \ E \\ 0 &amp; k \ 不满足性质 \ E \end{cases} $$</p></li></ul><h3 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h3><h4 id="化简求和公式"><a href="#化简求和公式" class="headerlink" title="化简求和公式"></a>化简求和公式</h4><h5 id="公式法"><a href="#公式法" class="headerlink" title="公式法"></a>公式法</h5><p>常见的变换：</p><p>$$ \sum ^{ n } _ { k &#x3D; m } a_k &#x3D; \sum ^{ n + i } _ { k &#x3D; m + i } a _ { k - i } &#x3D; \sum ^{ n - i } _ { k &#x3D; m - i } a _ { k + i }$$<br>$$ \sum ^{ n } _ { k &#x3D; m } a_k &#x3D; \sum ^{ n - m } _ { k &#x3D; 0 } a _ { n - k } &#x3D; \sum ^{ n - m } _ { k &#x3D; 0 } a _ { m + k } $$</p><hr><ul><li><p>$$ S &#x3D; 0 \cdot a + 1 \cdot a + \cdots + n \cdot a &#x3D; \sum ^{ n } _ { k &#x3D; 0 } ka $$</p><p><strong>可对 $ S $ 进行以下变换：</strong></p><p>$ k \longrightarrow n - k $：<br>  $$ S &#x3D; \sum ^{ n } _ { k &#x3D; 0 } ka &#x3D; \sum ^{ n } _ { k &#x3D; 0 } (n - k) a $$<br>可得：<br>  $$ 2S &#x3D; \sum ^{ n } _ { k &#x3D; 0 } ka + \sum ^{ n } _ { k &#x3D; 0 } (n - k) a &#x3D; \sum ^{ n } _ { k &#x3D; 0 } na &#x3D; n \sum ^{ n } _ { k &#x3D; 0} a &#x3D; n ( n + 1 ) a $$<br>  $$ S &#x3D; \dfrac{ n (n + 1) }{ 2 } a $$</p></li></ul><hr><ul><li><p>$$ S &#x3D; \sum _ { 1 \le i, j \le n } a_i a_j &#x3D; \left( \sum ^{ n } _ { i &#x3D; 1 } a_i \right) \left( \sum ^{ n } _ { j &#x3D; 1 } a_j \right) &#x3D; \left( \sum ^{ n } _ { k &#x3D; 1 } a_k \right) ^2 $$</p><p><strong>可对 $ S $ 进行以下变换：</strong></p><p>令 $ \overline S &#x3D; \sum _ { 0 \le i \le j \le n } a_i a_j $，则：<br>$$ \because S &#x3D; 2 \overline S - \sum ^{ n } _ { k &#x3D; 1 } a_k^2 $$<br>$$ \therefore 2 \overline S &#x3D; S + \sum ^{ n } _ { k &#x3D; 1 } a_k^2 $$<br>$$ \sum _ { 0 \le i \le j \le n } a_i a_j &#x3D; \dfrac{ 1 }{ 2 } \left( \left( \sum ^{ n } _ { k &#x3D; 1 } a_k \right) ^2 + \sum ^{ n } _ { k &#x3D; 1 } a_k^2 \right) $$</p><p><em>Tips:</em><br>$$ S : \begin{matrix}<br>a_1^2   &amp; a_1 a_2 &amp; a_1 a_3 &amp; \cdots &amp; a_1 a_n \\<br>a_2 a_1 &amp; a_2^2   &amp; a_2 a_3 &amp; \cdots &amp; a_2 a_n \\<br>a_3 a_1 &amp; a_3 a_2 &amp; a_3^2   &amp; \cdots &amp; a_3 a_n \\<br>\vdots  &amp; \vdots  &amp; \vdots  &amp; \ddots &amp; \vdots  \\<br>a_n a_1 &amp; a_n a_2 &amp; a_n a_3 &amp; \cdots &amp; a_n^2<br>\end{matrix} $$<br>$$ \overline S : \begin{matrix}<br>a_1^2   &amp; a_1 a_2 &amp; a_1 a_3 &amp; \cdots &amp; a_1 a_n \\<br>0       &amp; a_2^2   &amp; a_2 a_3 &amp; \cdots &amp; a_2 a_n \\<br>0       &amp; 0       &amp; a_3^2   &amp; \cdots &amp; a_3 a_n \\<br>\vdots  &amp; \vdots  &amp; \vdots  &amp; \ddots &amp; \vdots  \\<br>0       &amp; 0       &amp; 0       &amp; \cdots &amp; a_n^2<br>\end{matrix} $$<br>$$ 2 \overline S : \begin{matrix}<br>2 a_1^2 &amp; a_1 a_2 &amp; a_1 a_3 &amp; \cdots &amp; a_1 a_n \\<br>a_2 a_1 &amp; 2 a_2^2 &amp; a_2 a_3 &amp; \cdots &amp; a_2 a_n \\<br>a_3 a_1 &amp; a_3 a_2 &amp; 2 a_3^2 &amp; \cdots &amp; a_3 a_n \\<br>\vdots  &amp; \vdots  &amp; \vdots  &amp; \ddots &amp; \vdots  \\<br>a_n a_1 &amp; a_n a_2 &amp; a_n a_3 &amp; \cdots &amp; 2 a_n^2<br>\end{matrix} $$<br>$$ \sum ^{ n } _ { k &#x3D; 1 } a_k^2 : \begin{matrix}<br>a_1^2   &amp; 0       &amp; 0       &amp; \cdots &amp; 0       \\<br>0       &amp; a_2^2   &amp; 0       &amp; \cdots &amp; 0       \\<br>0       &amp; 0       &amp; a_3^2   &amp; \cdots &amp; 0       \\<br>\vdots  &amp; \vdots  &amp; \vdots  &amp; \ddots &amp; \vdots  \\<br>0       &amp; 0       &amp; 0       &amp; \cdots &amp; a_n^2<br>\end{matrix} $$<br>由图亦不难得出 $ 2 \overline S &#x3D; S + \sum ^{ n } _ { k &#x3D; 1 } a_k^2 $</p></li></ul><hr><h5 id="数学归纳法"><a href="#数学归纳法" class="headerlink" title="数学归纳法"></a>数学归纳法</h5><p>数学归纳法是一种特殊的直接证明的方法，在证明一些与正整数 $ n $（$ n $ 取无限多个值）有关的数学命题时，它往往是非常有用的研究工具。</p><!-- 一般地，数学归纳法可按如下两个步骤进行：  1.归纳奠基：证明当 $ n = n_0 $（$ n_0 \in \mathbb{N}^* $）时命题成立；  2.归纳递推：假设当 $ n = k $（$ k \in \mathbb{N}, k \ge n_0 $）时命题成立，证明当 $ n = k + 1 $ 时命题也成立。根据以上两步就可以断定命题对于从 $ n_0 $ 开始的所有正整数 $ n $ 都成立。 --><hr><ul><li><p>$$ S_n &#x3D; \sum ^{ n } _ { k &#x3D; 1 } ( 2k - 1 ) $$</p><p>找规律有：</p><table><thead><tr><th align="center">$ n $</th><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">$\cdots$</th></tr></thead><tbody><tr><td align="center">$ S_n $</td><td align="center">1</td><td align="center">4</td><td align="center">9</td><td align="center">16</td><td align="center">25</td><td align="center">36</td><td align="center">$\cdots$</td></tr></tbody></table><p>猜测 $ S_n &#x3D; n^2 $，证明过程如下：</p><ul><li>当 $ n &#x3D; 1 $，$ S_n &#x3D; n^2 $ 成立；</li><li>当 $ S_ { n - 1 } &#x3D; ( n - 1 ) $ 成立，有：<br>$$ \begin{aligned}<br>S_n &amp; &#x3D; S_ { n - 1 } + ( 2n - 1 ) \\<br>    &amp; &#x3D; ( n - 1 ) ^2 + 2n - 1    \\<br>    &amp; &#x3D; n^2 - 2n + 1 + 2n - 1    \\<br>    &amp; &#x3D; n^2<br>\end{aligned} $$</li></ul><p>证毕。</p></li></ul><hr><ul><li><p>证明均值不等式的特殊情形：当 $ n $ 为正整数，$ a_k \le 0 $，有<br>$$ \sqrt[ n ]{ \prod ^{ n } _ { k &#x3D; 1 } a_k } \le \dfrac{ \sum ^{ n } _ {k &#x3D; 1} a_k }{ n } $$</p><!-- ^{^{\normalsize{ n }}} --><p>称 $ P_n : \prod ^{ n } _ { k &#x3D; 1 } a_k \le \left( \sum ^{ n } _ {k &#x3D; 1} \dfrac{ a_k }{ n } \right) ^n $，原题等价于证明 $ P_n $。<br>证明由以下三个步骤组成：</p><ol><li>证明 $ P_1, P_2 $；</li><li>当 $ P_2, P_k $ 成立，证明 $ P_ { 2k } $；</li><li>当 $ P_2, P_ { n + 1 } $ 成立，证明 $ P_n $。</li></ol><p>不难看出，完成以上步骤后，命题得证。</p><p>证明过程如下： </p><ol><li><ul><li>对于 $ P_1 $， $ a_1 \le a_1 $ 恒成立;</li><li>对于 $ P_2 $，对原式进行如下变换：<br>$$ \begin{aligned}<br>   &amp;&amp; a_1 a_2   &amp; \le \left( \dfrac{ a_1 + a_2 }{ 2 } \right) ^2 \\<br>  \iff &amp;&amp; 4 a_1 a_2 &amp; \le ( a_1 + a_2 ) ^2                           \\<br>  \iff &amp;&amp; 0         &amp; \le ( a_1 - a_2 ) ^2<br>\end{aligned} $$<br>故恒成立。</li></ul><p>综上 $ P_1, P_2 $ 均为真命题。</p></li><li><p>当 $ P_2, P_k $ 成立，有：</p></li></ol><p>  $$ \begin{aligned}<br>      \prod ^{ 2k } _ { i &#x3D; 1 } a_i<br>    &amp; &#x3D;   &amp;&amp; \left( \prod ^{ k } _ { i &#x3D; 1 } a_i \right) \left( \prod ^{ 2k } _ { i &#x3D; k + 1 } a_i \right) \\<br>    &amp; \le &amp;&amp; \left( \sum ^{ k } _ { i &#x3D; 1 } \dfrac{ a_i }{ k } \right) \left( \sum ^{ 2k } _ { i &#x3D; k + 1 } \dfrac{ a_i }{ k } \right) \\<br>    &amp; \le &amp;&amp; \left( \frac{ 1 }{ 2 } \right) ^{ 2k } \left( \sum ^{ 2k } _ { i &#x3D; 1 } \dfrac{ a_i }{ k } \right) ^{ 2k } \\<br>    &amp; &#x3D;   &amp;&amp; \left( \sum ^{ 2k } _ { i &#x3D; 1 } \frac{ a_i }{ 2k } \right) ^{ 2k }<br>  \end{aligned} $$</p><p>  得 $ P_ { 2k } $ 成立。</p><ol start="3"><li>当 $ P_2, P_ { n + 1 } $ 成立，令 $ a_ { n + 1 } &#x3D; \sum ^{ n } _ { k &#x3D; 1 } \dfrac{ a_k }{ n } $，有：</li></ol><p>  $$ \begin{aligned}<br>      \left( \prod ^{ n } _ { k &#x3D; 1 } a_k \right) a_ { n + 1 }<br>    &amp; &#x3D;   &amp;&amp; \left( \prod ^{ n + 1 } _ { k &#x3D; 1 } a_k \right) \\<br>    &amp; \le &amp;&amp; \left( \sum ^{ n + 1 } _ { k &#x3D; 1 } \dfrac{ a_k }{ n + 1 } \right) ^{ n + 1 } \\<br>    &amp; &#x3D;   &amp;&amp; \left( \dfrac{ \left( \sum ^{ n } _ { k &#x3D; 1 } a_k \right) + \left( \sum ^{ n } _ { k &#x3D; 1 } \dfrac{ a_k }{ n } \right) }{ n + 1 } \right) ^{ n + 1 } \\<br>    &amp; \le &amp;&amp; \left( \dfrac{ ( n + 1 ) \sum ^{ n } _ { k &#x3D; 1 } a_k }{ n ( n + 1 ) } \right) ^{ n + 1 } \\<br>    &amp; &#x3D;   &amp;&amp; \left( \sum ^{ n } _ { k &#x3D; 1 } \dfrac{ a_k }{ n } \right) ^{ n + 1 }<br>  \end{aligned} $$</p><p>  $$ \therefore \left( \prod ^{ n } _ { k &#x3D; 1 } a_k \right) \le \dfrac{ \left( \sum ^{ n } _ { k &#x3D; 1 } \dfrac{ a_k }{ n } \right) ^{ n + 1 } }{ a_ { n + 1 } } &#x3D; \left( \sum ^{ n } _ { k &#x3D; 1 } \dfrac{ a_k }{ n } \right) ^n $$</p><p>  得 $ P_n $ 成立。</p><p>综上，对于任意正整数 $ n $，$ P_n $ 均成立。证毕。</p></li></ul><hr><h5 id="拆项法"><a href="#拆项法" class="headerlink" title="拆项法"></a>拆项法</h5><p>令 $ S_n &#x3D; \sum ^{ n } _ { k &#x3D; 0 } a_k $，则可以将数列首项或末项分离，得到：</p><p>$$ S_ { n + 1 } &#x3D; a_0 + \sum ^{ n + 1 } _ { k &#x3D; 1 } a_k &#x3D; a_0 + \sum ^{ n } _ { k &#x3D; 0 } a_ { k + 1 }$$</p><p>$$ S_ { n + 1 } &#x3D; \sum ^{ n } _ { k &#x3D; 0 } a_k + a_ { n + 1 } &#x3D; S_n + a_ { n + 1 } $$</p><hr><ul><li><p>$$ S_n &#x3D; 1 + a + a^2 + a^3 + \cdots + a^n &#x3D; \sum ^{ n } _ { k &#x3D; 1 } a^k $$</p><p>令 $ a_k &#x3D; a^k $，有：</p><p>$$ \because \begin{cases}<br>  S_ { n + 1 } &#x3D; a_0 + \sum ^{ n } _ { k &#x3D; 0 } a_ { k + 1 } &#x3D; a S_n + 1 \\<br>  S_ { n + 1 } &#x3D; S_n + a_ { n + 1 } &#x3D; S_n + a^{ n + 1 }<br>\end{cases} $$</p><p>$$ \therefore a S_n + 1 &#x3D; S_n + a^{ n + 1 } $$</p><p>$$ S_n &#x3D; \begin{cases}<br>  \dfrac{ a^{ n + 1 } - 1 }{ a - 1 } &amp; a \ne 1 \\<br>  n + 1                              &amp; a &#x3D; 1<br>\end{cases} $$</p></li></ul><hr><ul><li><p>$$ S_n &#x3D; \sum ^{ n } _ { k &#x3D; 1 } k 2^k $$</p><p>  令 $ a_k &#x3D; k 2^k $，有：</p><p>  $$ \because \begin{cases}<br>S_ { n + 1 } &amp; &#x3D; a_0 + \sum ^{ n } _ { k &#x3D; 0 } a_ { k + 1 } &#x3D; 0 + \sum ^{ n } _ { k &#x3D; 0 } ( k + 1 ) 2 ^{ k + 1 } \\<br>            &amp; &#x3D; 2 \sum ^{ n } _ { k &#x3D; 0 } k 2^k + 2 \sum ^{ n } _ { k &#x3D; 0 } 2^k &#x3D; 2S_n + 2^{ n + 2 } - 2 \\ \\<br>S_ { n + 1 } &amp; &#x3D; S_n + a_ { n + 1 } &#x3D; S_n + 2^{ n + 1 } n + 2^{ n + 1 }<br>  \end{cases} $$</p><p>  $$ \therefore 2S_n + 2^{ n + 2 } - 2 &#x3D; S_n + 2^{ n + 1 } n + 2^{ n + 1 } $$</p><p>  $$ S_n &#x3D; ( n - 1 ) 2^{ n + 1 } + 2 $$</p></li></ul><hr><h4 id="使用求和公式表示函数"><a href="#使用求和公式表示函数" class="headerlink" title="使用求和公式表示函数"></a>使用求和公式表示函数</h4><p>对于数列 $ { T_n } $，若已知下列递推公式：</p><p>$$ \begin{aligned}<br>  T_0     &amp; &#x3D; \alpha \\<br>  a_n T_n &amp; &#x3D; b_n T_ { n - 1 } + c_n<br>\end{aligned} $$</p><p>则我们可以对其进行下列推导：</p><p>  定义数列 $ { s_n } $ 与 $ { S_n }$，令 $ s_ { n - 1 } a_ { n - 1 } &#x3D; s_n b_n , S_n &#x3D; s_n a_n T_n$，有：</p><p>  $$ S_n &#x3D; s_n \left( b_n T_ {n - 1} + c_n \right) &#x3D; s_ { n - 1 } a_ { n - 1 } T_ { n - 1 } + s_n c_n &#x3D; S_ { n - 1 } + s_n c_n $$</p><p>  故不难得到：</p><p>  $$ \begin{aligned}<br>    S_n &amp; &#x3D; S_ { n - 1 } + s_n c_n \\<br>        &amp; &#x3D; S_ { n - 2 } + s_n c_n + s_ { n - 1 } c_ { n - 1 } \\<br>        &amp; &#x3D; \cdots \\<br>        &amp; &#x3D; S_ { 0 } + s_n c_n + s_ { n - 1 } c_ { n - 1 } + \cdots + s_1 c_1 \\<br>        &amp; &#x3D; s_0 a_0 T_0 + \sum ^{ n } _ { k &#x3D; 1 } s_k c_k<br>  \end{aligned} $$</p><p>  $$ T_n &#x3D; \dfrac{ 1 }{ s_n a_n } \left( s_0 a_0 T_0 + \sum ^{ n } _ { k &#x3D; 1 } s_k c_k \right) $$</p><p>  对于 $ { s_n }$，我们可以通过如下方式构造：</p><p>  $$ \begin{aligned}<br>    s_n &amp; &#x3D; \dfrac{ a_ { n - 1 } s_ { n - 1 } }{ b_n } \\<br>        &amp; &#x3D; \dfrac{ a_ { n - 1 } a_ { n - 2 } s_ { n - 2 } }{ b_n b_ { n - 1 } } \\<br>        &amp; &#x3D; \cdots \\<br>        &amp; &#x3D; \dfrac{ s_0 \prod ^{ n - 1 } _ { k &#x3D; 0 } a_k }{ \prod ^{ n } _ { k &#x3D; 0 } b_k }<br>  \end{aligned} $$</p><p>  令 $ s_0 &#x3D; 1 $，则 $ s_n &#x3D; \dfrac{ \prod ^{ n - 1 } _ { k &#x3D; 0 } a_k }{ \prod ^{ n } _ { k &#x3D; 0 } b_k } $。</p><hr><ul><li><p>用求和公式表示 $ 1 \sim n $ 的 <a href="https://oi-wiki.org/math/combinatorics/derangement/">错排数</a> $ D_n $</p><p>将错排问题具体化，可以得到其递推公式：</p><blockquote><p>把错位排列问题具体化，考虑这样一个问题：</p><p>$n$ 封不同的信，编号分别是 $1,2,3,4,5$，现在要把这五封信放在编号 $1,2,3,4,5$ 的信封中，要求信封的编号与信的编号不一样。问有多少种不同的放置方法？</p><p>假设考虑到第 $n$ 个信封，初始时暂时把第 $n$ 封信放在第 $n$ 个信封中，然后考虑两种情况的递推：</p><ul><li>前面 $n-1$ 个信封全部装错；</li><li>前面 $n-1$ 个信封有一个没有装错其余全部装错。</li></ul><p>对于第一种情况，前面 $n-1$ 个信封全部装错：因为前面 $n-1$ 个已经全部装错了，所以第 $n$ 封只需要与前面任一一个位置交换即可，总共有 $D_ {n-1}\times (n-1)$ 种情况。</p><p>对于第二种情况，前面 $n-1$ 个信封有一个没有装错其余全部装错：考虑这种情况的目的在于，若 $n-1$ 个信封中如果有一个没装错，那么把那个没装错的与 $n$ 交换，即可得到一个全错位排列情况。</p><p>其他情况，不可能通过一次操作来把它变成一个长度为 $n$ 的错排。</p><p>于是可得，错位排列数满足递推关系：</p><p>$$ D_n&#x3D;(n-1)(D_ {n-1}+D_ {n-2}) $$</p><p>—— 摘自 <a href="https://oi-wiki.org/math/combinatorics/derangement/#%E9%80%92%E6%8E%A8%E7%9A%84%E8%AE%A1%E7%AE%97">错位排列 - OI Wiki</a></p></blockquote><p>不难得到 $ D_1 &#x3D; 0, D_2 &#x3D; 1 $，</p><p>将得到的结果稍作处理：</p><p>$$ \begin{aligned}<br>  D_n - n D_ { n - 1 }<br>&amp; &#x3D; - \left( D_ { n - 1 } - ( n - 1 ) D_ { n - 2 } \right) \\<br>&amp; &#x3D; D_ { n - 2 } - ( n - 2 ) D_ { n - 3 } \\<br>&amp; &#x3D; \cdots \\<br>&amp; &#x3D; ( -1 ) ^{ n - 2 } ( D_2 - D_1 ) &#x3D; ( -1 )^n<br>\end{aligned} $$</p><p>也得出了 OI Wiki 中给出的另一个递推关系：</p><p>$$ D_n&#x3D;nD_ {n-1}+{(-1)}^n $$</p><p>代入 $ D_1 $，我们可以定义 $ D_0 $：</p><p>$$ D_1 &#x3D; D_0 - 1 $$<br>$$ D_0 &#x3D; D_1 + 1 &#x3D; 1 $$</p><p>于是，我们得到：</p><p>$$ \begin{cases}<br>  &amp; D_0 &#x3D; 1 \\<br>  &amp; D_n &#x3D; n D_ { n - 1 } + ( -1 )^n<br>\end{cases} $$</p><p>有 $$ \begin{cases}<br>  &amp; a_n &#x3D; 1 \\<br>  &amp; b_n &#x3D; n \\<br>  &amp; c_n &#x3D; ( -1 )^n \\<br>  &amp; s_n &#x3D; \dfrac{ \prod ^{ n - 1 } _ { k &#x3D; 1 } a_k }{ \prod ^{ n } _ { k &#x3D; 1 } b_k } &#x3D; \dfrac{ 1 }{ n! }<br>\end{cases} $$</p><p>则 $ D_n $ 可以被求和公式表示为：</p><p>$$ \begin{aligned}<br>  D_n<br>&amp; &#x3D; \dfrac{ 1 }{ s_n a_n } \left( s_0 a_0 D_0 + \sum ^{ n } _ { k &#x3D; 1 } s_k c_k \right) \\<br>&amp; &#x3D; n! ( 1 + \sum ^{ n } _ { k &#x3D; 1 } \dfrac{ ( -1 )^k }{ k! } ) \\<br>&amp; &#x3D; n! \sum ^{ n } _ { k &#x3D; 0 } \dfrac{ (-1)^k }{ k! }<br>\end{aligned} $$</p><p>或者</p><p>$$ \dfrac{ D_n }{ n! } &#x3D; \sum ^{ n } _ { k &#x3D; 0 } \dfrac{ (-1)^k }{ k! } $$</p><p><em>Tips:</em> 我们知道 </p><p>$$ \lim _ { n \to +\infty } \sum ^{ n } _ { k &#x3D; 0 } \dfrac{ (-1)^k }{ k! } &#x3D; \dfrac{ 1 }{ \mathrm{ e } } $$</p><p>这意味着，当 $ n $ 足够大时，$ 1 \sim n $ 的随机全排列有 $ \frac{ 1 }{ \mathrm{ e } } $ 的概率是错位排列。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> ​学习笔记 </category>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 数列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023, Happy New Year!</title>
      <link href="/%E5%85%B6%E5%AE%83/2023-new-year/"/>
      <url>/%E5%85%B6%E5%AE%83/2023-new-year/</url>
      
        <content type="html"><![CDATA[<!-- <script src='https://api.vvhan.com/api/snow'></script> --><script type="text/javascript" src='/js/darkmode/prior-darkmode.js' data-pjax></script><!DOCTYPE html><html>    <head>        <meta charset="utf-8" />        <title></title>        <meta charset="utf-8"><title>3D烟花</title><style>/* body{    background:#000;} */canvas{    margin:0px;    width:100%;    height:100%;    /* overflow:hidden; */    background:#000;}#canvas{    width:100%;    height:100%;}</style></head>    <body><canvas id="canvas" width="825" height="631" onclick="func()"></canvas><p align="center" onclick="func()"> $\scriptsize{点击打开、关闭音效}$ </p><script data-pjax>{let sound = true, stop = false, path = location.pathname;function func () {    sound = !sound;}let pi, ctx, cx, cy, playerX, playerY, playerZ, playerVX, playerVY, playerVZ,    pitch, yaw, pitchV, yawV, scale, seedTimer, seedInterval, seedLife, gravity,    seeds, sparkPics, s, sparks, pow1, pow2, pow3, pow4, frames;function initVars(){    pi=Math.PI;    ctx=canvas.getContext("2d");    canvas.width=canvas.clientWidth;    canvas.height=canvas.clientHeight;    cx=canvas.width/2;    cy=canvas.height/2;    playerZ=-25;    playerX=playerY=playerVX=playerVY=playerVZ=pitch=yaw=pitchV=yawV=0;    scale=600;    seedTimer=0;seedInterval=5,seedLife=100;gravity=.02;    seeds=new Array();    sparkPics=new Array();    s="https://cantelope.org/NYE/";    for(i=1;i<=10;++i){        sparkPic=new Image();        sparkPic.src=s+"spark"+i+".png";        sparkPics.push(sparkPic);    }    sparks=new Array();    pow1=new Audio(s+"pow1.ogg");    pow2=new Audio(s+"pow2.ogg");    pow3=new Audio(s+"pow3.ogg");    pow4=new Audio(s+"pow4.ogg");    frames = 0;}function rasterizePoint(x,y,z){    var p,d;    x-=playerX;    y-=playerY;    z-=playerZ;    p=Math.atan2(x,z);    d=Math.sqrt(x*x+z*z);    x=Math.sin(p-yaw)*d;    z=Math.cos(p-yaw)*d;    p=Math.atan2(y,z);    d=Math.sqrt(y*y+z*z);    y=Math.sin(p-pitch)*d;    z=Math.cos(p-pitch)*d;    var rx1=-1000,ry1=1,rx2=1000,ry2=1,rx3=0,ry3=0,rx4=x,ry4=z,uc=(ry4-ry3)*(rx2-rx1)-(rx4-rx3)*(ry2-ry1);    if(!uc) return {x:0,y:0,d:-1};    var ua=((rx4-rx3)*(ry1-ry3)-(ry4-ry3)*(rx1-rx3))/uc;    var ub=((rx2-rx1)*(ry1-ry3)-(ry2-ry1)*(rx1-rx3))/uc;    if(!z)z=.000000001;    if(ua>0&&ua<1&&ub>0&&ub<1){        return {            x:cx+(rx1+ua*(rx2-rx1))*scale,            y:cy+y/z*scale,            d:Math.sqrt(x*x+y*y+z*z)        };    }else{        return {            x:cx+(rx1+ua*(rx2-rx1))*scale,            y:cy+y/z*scale,            d:-1        };    }}function spawnSeed(){        seed=new Object();    seed.x=-50+Math.random()*100;    seed.y=25;    seed.z=-50+Math.random()*100;    seed.vx=.1-Math.random()*.2;    seed.vy=-1.5;//*(1+Math.random()/2);    seed.vz=.1-Math.random()*.2;    seed.born=frames;    seeds.push(seed);}function splode(x,y,z){        t=5+parseInt(Math.random()*150);    sparkV=1+Math.random()*2.5;    type=parseInt(Math.random()*3);    switch(type){        case 0:            pic1=parseInt(Math.random()*10);            break;        case 1:            pic1=parseInt(Math.random()*10);            do{ pic2=parseInt(Math.random()*10); }while(pic2==pic1);            break;        case 2:            pic1=parseInt(Math.random()*10);            do{ pic2=parseInt(Math.random()*10); }while(pic2==pic1);            do{ pic3=parseInt(Math.random()*10); }while(pic3==pic1 || pic3==pic2);            break;    }    for(m=1;m<t;++m){        spark=new Object();        spark.x=x; spark.y=y; spark.z=z;        p1=pi*2*Math.random();        p2=pi*Math.random();        v=sparkV*(1+Math.random()/6)        spark.vx=Math.sin(p1)*Math.sin(p2)*v;        spark.vz=Math.cos(p1)*Math.sin(p2)*v;        spark.vy=Math.cos(p2)*v;        switch(type){            case 0: spark.img=sparkPics[pic1]; break;            case 1:                spark.img=sparkPics[parseInt(Math.random()*2)?pic1:pic2];                break;            case 2:                switch(parseInt(Math.random()*3)){                    case 0: spark.img=sparkPics[pic1]; break;                    case 1: spark.img=sparkPics[pic2]; break;                    case 2: spark.img=sparkPics[pic3]; break;                }                break;        }        spark.radius=25+Math.random()*50;        spark.alpha=1;        spark.trail=new Array();        sparks.push(spark);    }    switch(parseInt(Math.random()*4)){        case 0:pow=new Audio(s+"pow1.ogg"); break;        case 1:pow=new Audio(s+"pow2.ogg"); break;        case 2:pow=new Audio(s+"pow3.ogg"); break;        case 3:pow=new Audio(s+"pow4.ogg"); break;    }    d=Math.sqrt((x-playerX)*(x-playerX)+(y-playerY)*(y-playerY)+(z-playerZ)*(z-playerZ));    pow.volume=1.5/(1+d/10);    if (sound) {        var resp = pow.play();        if (resp !== undefined)            resp.then(_ => {}).catch(error => {});    }}function doLogic(){        if(seedTimer<frames){        seedTimer=frames+seedInterval*Math.random()*10;        spawnSeed();    }    for(i=0;i<seeds.length;++i){        seeds[i].vy+=gravity;        seeds[i].x+=seeds[i].vx;        seeds[i].y+=seeds[i].vy;        seeds[i].z+=seeds[i].vz;        if(frames-seeds[i].born>seedLife){            splode(seeds[i].x,seeds[i].y,seeds[i].z);            seeds.splice(i,1);        }    }    for(i=0;i<sparks.length;++i){        if(sparks[i].alpha>0 && sparks[i].radius>5){            sparks[i].alpha-=.01;            sparks[i].radius/=1.02;            sparks[i].vy+=gravity;            point=new Object();            point.x=sparks[i].x;            point.y=sparks[i].y;            point.z=sparks[i].z;            if(sparks[i].trail.length){                x=sparks[i].trail[sparks[i].trail.length-1].x;                y=sparks[i].trail[sparks[i].trail.length-1].y;                z=sparks[i].trail[sparks[i].trail.length-1].z;                d=((point.x-x)*(point.x-x)+(point.y-y)*(point.y-y)+(point.z-z)*(point.z-z));                if(d>9){                    sparks[i].trail.push(point);                }            }else{                sparks[i].trail.push(point);            }            if(sparks[i].trail.length>5)sparks[i].trail.splice(0,1);            sparks[i].x+=sparks[i].vx;            sparks[i].y+=sparks[i].vy;            sparks[i].z+=sparks[i].vz;            sparks[i].vx/=1.075;            sparks[i].vy/=1.075;            sparks[i].vz/=1.075;        }else{            sparks.splice(i,1);        }    }    p=Math.atan2(playerX,playerZ);    d=Math.sqrt(playerX*playerX+playerZ*playerZ);    d+=Math.sin(frames/80)/1.25;    t=Math.sin(frames/200)/40;    playerX=Math.sin(p+t)*d;    playerZ=Math.cos(p+t)*d;    yaw=pi+p+t;}function rgb(col){        var r = parseInt((.5+Math.sin(col)*.5)*16);    var g = parseInt((.5+Math.cos(col)*.5)*16);    var b = parseInt((.5-Math.sin(col)*.5)*16);    return "#"+r.toString(16)+g.toString(16)+b.toString(16);}function draw(){        ctx.clearRect(0,0,cx*2,cy*2);        ctx.fillStyle="#ff8";    for(i=-100;i<100;i+=3){        for(j=-100;j<100;j+=4){            x=i;z=j;y=25;            point=rasterizePoint(x,y,z);            if(point.d!=-1){                size=250/(1+point.d);                d = Math.sqrt(x * x + z * z);                a = 0.75 - Math.pow(d / 100, 6) * 0.75;                if(a>0){                    ctx.globalAlpha = a;                    ctx.fillRect(point.x-size/2,point.y-size/2,size,size);                }            }        }    }    ctx.globalAlpha=1;    for(i=0;i<seeds.length;++i){        point=rasterizePoint(seeds[i].x,seeds[i].y,seeds[i].z);        if(point.d!=-1){            size=200/(1+point.d);            ctx.fillRect(point.x-size/2,point.y-size/2,size,size);        }    }    point1=new Object();    for(i=0;i<sparks.length;++i){        point=rasterizePoint(sparks[i].x,sparks[i].y,sparks[i].z);        if(point.d!=-1){            size=sparks[i].radius*200/(1+point.d);            if(sparks[i].alpha<0)sparks[i].alpha=0;            if(sparks[i].trail.length){                point1.x=point.x;                point1.y=point.y;                switch(sparks[i].img){                    case sparkPics[0]:ctx.strokeStyle="#f84";break;                    case sparkPics[1]:ctx.strokeStyle="#84f";break;                    case sparkPics[2]:ctx.strokeStyle="#8ff";break;                    case sparkPics[3]:ctx.strokeStyle="#fff";break;                    case sparkPics[4]:ctx.strokeStyle="#4f8";break;                    case sparkPics[5]:ctx.strokeStyle="#f44";break;                    case sparkPics[6]:ctx.strokeStyle="#f84";break;                    case sparkPics[7]:ctx.strokeStyle="#84f";break;                    case sparkPics[8]:ctx.strokeStyle="#fff";break;                    case sparkPics[9]:ctx.strokeStyle="#44f";break;                }                for(j=sparks[i].trail.length-1;j>=0;--j){                    point2=rasterizePoint(sparks[i].trail[j].x,sparks[i].trail[j].y,sparks[i].trail[j].z);                    if(point2.d!=-1){                        ctx.globalAlpha=j/sparks[i].trail.length*sparks[i].alpha/2;                        ctx.beginPath();                        ctx.moveTo(point1.x,point1.y);                        ctx.lineWidth=1+sparks[i].radius*10/(sparks[i].trail.length-j)/(1+point2.d);                        ctx.lineTo(point2.x,point2.y);                        ctx.stroke();                        point1.x=point2.x;                        point1.y=point2.y;                    }                }            }            ctx.globalAlpha=sparks[i].alpha;            ctx.drawImage(sparks[i].img,point.x-size/2,point.y-size/2,size,size);        }    }}function frame(){    if(stop) return;    if(frames>100000){        seedTimer=0;        frames=0;    }    frames++;    draw();    doLogic();    requestAnimationFrame(frame);}// window.addEventListener("resize",()=>{//     canvas.width=canvas.clientWidth;//     canvas.height=canvas.clientHeight;//     cx=canvas.width/2;//     cy=canvas.height/2;// });window.addEventListener('pjax:success', () => {    sound = false;    if (path != location.pathname) stop = true;});initVars();frame();}</script></body></html>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>唐の癲</title>
      <link href="/%E6%9D%82%E6%96%87/C202/Tang&#39;s-insaneness/"/>
      <url>/%E6%9D%82%E6%96%87/C202/Tang&#39;s-insaneness/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5f747f9bdb42e724504fbab400c36af3551b5c92c05a9eca8c9d0f9a560ebfac">593b9f9b7999fd0a8b7b70bf4a5d30fadd356f214a193f283536a7a0af23915e75a8f97b97079e3bc641d70a46e62bfdd05553061f710bcb1ebb45652ffb21b0ee255cee24874f227264e9d5b3ad590aee1768ea23f07e1f4a36f408ededee04398397384edba5fbc793308c3b70c7ee0cdb85c0a5d03f929c49267ca0e533a14bbea1411b359110267500cefe584de0374ab55fc64aeca10b2fa263dc9537db9d8426394486215ba7fb206671d90ec2d9ddb737c448967f9bc0e45256d01c007ec79e57a170391d57300d5ae560502f749cb4d3ea45e120e2447f83b41a7bdba770d17572d5219d77b71b1c882db90df1f70934697b08dabdf8662b79fbf21592fa9d2d039d54364916b978329305d23c16fe25235b189126ba64d30f101673d81f58b618509036c87618e6053700930a6fbbffc2a8dc7fb46b82da987b1909da9a0821b79f15d069ae0b0130938b8a76ce61aeca96e9788dea00f0a981c6b632234e8babc7ec41ee5d785f76e5d726115950fb01782716413f0625f1827127b36cb60400905d9630b3c108f5400fce23ae99e77f4ddfbdd034e73f4a909ae50260c34cb23bfac2976e7ac1584e3fad0d9916d4078724124ba48587f7d72bfc51efdff1f45cdfdff55ff5fb821be4b5b8502c0e6743adbaa0c92ba7426e11ad4582a5e7b6eb6b0fd600473af4f16cd3d5ede48456caf5b5e3564c6d09c29d577dad936613c27ff6e852856d5c900ce374c789d9c200a0897933581ce97f502ea1661cbcdb695f83a48251a921b99efd8e3470aad049eb03990f3e1768d115a7753af143d3d34381328c873ac50048d53df1b67d03d64373623b738621b32e08ef234743e21b0e4a49e81ec704e9a696b10c738fb25ffc2a3ddc4fdbad69772218b192536e40517581e861210135ae66ceff20ceb44fa6af28e8acc1f9cafcce38ca40fd850c85825bd4809028a70bd71a81e48322991b9bfa8433259b53b333e773c09a78a6d9c4898e293508a2be10fa740b057ffc73cb6d60a6f11dbd931d82db5ff897144e6f6de99bebd869d0f9cff8dd40de9f920fc442d22abe7ddfe85071c1b0c9c048e50295a7723b58090a3bbd620cfbe4f235cb338d78b97dc1e8c94ac43d82317e4a75d5b9249426e44d7ccc0a424404db355f7eb0181928b1d33112fee91f02c18f6b42730243170a6ef019385d7c2edd27231aa892d85e1ef2028d2affd7af18b22eea09f5b64b9fb222762a5d0e5cc699427c6b3642ac580c37158fcbcd44c6c13b6fa90f89f64d072e98b31d8ae5f2a0a8725d8927ae02109a5819e0a914cee191a0240ecfc0d7c13b7dcacad420203b9dbfa34c74d33562777e44236552bf9b7d9167d47c647c2cb7cbdfd50b52099f117897f1ec8054fa4a46e6e4021d21f4625480d90fdd923cbfc2455dd93a659475ba6308040f1351cb610b5fa804906dd268b77beb1c33ce45b81be5085e7d48023808528de774b890501e80be3ccc44ed7a7463948086e180a35e751e8b8b08b3da2db22c42971dbf27412243ea499173de33ddf9ad33052b929b76e5f58adc1284f18dd6d745005a37f707b9518407d5a4536f540c16cedeeb7247763bc8a892d96a0bdc527f7e849711737c6895e2ff4ce89e1452faae1d04877aa2ea3b007799ca5ab32c3f1d25e343c6e612137964f9667207a71aff381d6f528e39e47e23850f699787ba1c5542cbaf3cdd712ed4b9fc41e401f115cede843c081a5b0e753206b542699b7ca292baead23ec639c1449fbc016e9b98a7d1cd67bde46f755cc44ceef18847a77cd19fccf34dcaa94c793cf105b9fedbf4bf7eb5a5dae417e73ba8056addea63c9d1b5e59cb9c4422e3f670392021e84c6b2e49069a2c11c197bcbeeec4cdac25ef57bcb453d584787917b9ffc8941ae8a19110129f0d75e87c7ba9c69fdadfd09fb881dc8e8d07e33d22f304f416dc41b194ca50a0f0e06c9d0c333f4891d05b28cfa4c8e8e035ff9efbe8aa5977f16c0ffd3855a82f750c4b3e89b2626bdaa5e9bb1630a8cf405c0c6eff3de0ce80ca7d642bc8049efd3812594bd04cd7b062ea71e45153cee10b54dd2dd4d1b9d318dea4147905c946a8836f99028b739ef4173245b6106327a59a5709e06bb9792c36a171a76326180efb335304b0dbb0d9f9c0810e75ab8645d93643cdc7973293e4865deb7202ac4ff399811e5d243a7cbefc59bc905eb8c226029c59e3fd07ffa98b7f6dd59da5c7cdc1fadf3376a10f9305ebb59e970282884a9cb7cb3674c2bbf41d6d4f814b49b3bc5bdbc42bc9f07a5e8b873af1eec8aaabaa6377b4228f2c22b5a8d840ccd21c5d2d640c13b9279bc750ba1290669dbb42330e61a64c8bd85a7127f0fb7136c50a08c56611c13a3dffcde8673675cbc689f0fa9a71e419f17e30d2efdc9be621dd77741dbe4e23075d251a414ca840e483de0c2c165bd9fa7b7208e98f6682b150a763729ad22e4ad10adc71697afe70d69585ce4b11374225dbdcc6b0d29e969c5d7d23ca69344b8327091e351e1d291f7eba2b3ec76e5eadf5dd2bc67b75237e7fb1ad37482b5d47991f8b193e229b5a9795dbaf4ffd712e0bf9797039ff3e82c2d7fc696bee42b9be7967e65a217dca13174f6ab5c178d49509689aeefab4b342b0c654faf96af0db8f82cb60b8a3391825ba633530281b20da97f4d4346e26ec1137d50bf00db6abb988e6edbb854c26925a85e89fc8e8c21183a6278b98fb6283f423a385e87acda7162b6e7979a0c93af9ead430f05f653e04db8cb1ebf4a3934a38877757478645daa59935556f96f6d4296c994de7d1547589dcfff5f70bd0fd415a37132c84ec7941538d5bb4bd7a0c395195561158ce856dcfa3c7cd22db6f1d561d900ec7076882c83fe6e76ff14ec00150a97b5e21b973beeb7286651a3b50634dee874f9aca2b6437552b76b0788503141a7c51af968167a94274e2c8ca6ca6187b688503a614bf423453d1a5f6e100568c4a15d12ed477ca2baa5e53b7c168c9c9a8fa261594423946104b032d93c011407e3f3fdd64ff82d349568542405966399e89356d4c8c5b6aba1ad33403908c0395abfbb45f3f688c6c50fafa50005e2e862756b9a4c274abafede4cf91a8264afe67dd4322baa9a58eac77c54860cbb0d8fa0c81a39c8c5670a65f84e9009a6d40f3386c4298a0c52830675da5a3c3b0f8d59cf97a5de2e6aa113ae5a579d7af59e95940938f8552c1426f1c2aa23d4a97c09527d2e4c7d33d9b0176298b3ef380aac382f56cb14ad0b1274eccdd2f6eb0142f4561da1b154a37ac3abf528b42a844e5d0e9de2037c6ec7e43ade02d3037cee52c51d4fa6d18e36b4a864d7ea86aa7193e9e7c607ccc3172f2a3c242af9c0b47b48f2441d3d2af9c653eea2f8fad7fe5a852f43b702b98d9d3e4a00d6c46464e12e3abfa71d22199a346fa2696a29041974f4214c00e40a695765513e1eec0a0405c3be3dbe924d2c4cd3eb71733a14ac2bc8382c8b6333cc6e46b013b1a00431be287dae6417f6c8f3727e47e24e05ee2ee3e184c2a27101a11072aa144c288f9f8a3bc167bd8701745089f3bc30e67aa885ec3ce2dae7f53e3c8fc3e8ced0af3070d0c00a082de11dff354bdb60e2463252272b665bcb5f0ce5b0a6f52429ab9a08d91b12264c7e7eca72ef26069325709a5d5a541c62bedb852189f7c4935df0721ceef71f3d2a80811cc6cc4bdde1d704a98e4765dff9c7fdea8f2eca7356be21be440ebdd153098d2a59ac462ee8bed5c164dbfa0e63f93fd0f81676de932bce2b29d0fd55ac0de30642b8ca9a4fa62615a2d2cf5ec6b002ea9fa2c3c9d7e7e2e6d5c56f41bbe57c4e3cef914bc9c02bf1a1c0884914d5f28e4cb4d09fbfbbfcb734feecdfe0afba07e1a9be0e90f3355a0522f74dceaa7ff7bab1bc594d0cca52298f84ad46fc7f95779b3ebf0d72280015ca33bf325b2e96e09e4a53bf3794b2c0c3a00b580eee60d7043dcc55ac9ffacc5efbe31026a6e5d2927687dbe8c8b8989872151691378be8d17016df0468d5d22966a5b4ac9f666365cba7c229fcc87bfc77c63bee4e821e09e853c6254fb96578056c786985d3e5f1aed5d5128029a3a562c7724998c7afbd3a650494fb55f07beeea9f3b5c3e2f1b75692cef990d01075634c3bcea6c0ab106149ae47dadd71c657228229c21eb7b9d5e57e4dc31b923e5ab2a54ba8a99a48959d65569d5a1ea574103b2888f79d6aea96bd71704761071ac91ee95135cb7d68770dec5e142644692202861c3cf3bdfb2eaf43228f31848d1b922bb3037c858c018dcac849835c452ccfb2050125cea918dae5d981ecc0645d92ec8dff6dfaf3dceec9341d52ada7388631c3788536f0531ab91848c3186d283a2d928c0f634375ed35ad6a1f64d3a720d927406f63b79763a5da4f1769b1c6bb5f055c75a7c1b59ef477cacb7bb592df68cdf477296bbb3338b252d342ca46a39e8916ae5760be570d52501388c8199d5ae9bd895af202fc9cc754b4fd3e47147dad3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> C202 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 宿舍 </tag>
            
            <tag> 奇闻轶事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大事记-第一次宿舍大战</title>
      <link href="/%E6%9D%82%E6%96%87/C202/Dorm-War-I/"/>
      <url>/%E6%9D%82%E6%96%87/C202/Dorm-War-I/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c6d80004c56ce4458005bfd1283b7da8c2afaa576ffcf2a32f4c39e5e7f2f6fa"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> C202 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 宿舍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OI比赛中的一些技巧</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8A%80%E5%B7%A7/OI-competitions-skills/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8A%80%E5%B7%A7/OI-competitions-skills/</url>
      
        <content type="html"><![CDATA[<h2 id="输入输出重定向"><a href="#输入输出重定向" class="headerlink" title="输入输出重定向"></a>输入输出重定向</h2><p>可用于更方便地进行输入输出、对拍等操作。</p><p>使用 <code>&lt;cstdio&gt;</code> 中的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">FILE * <span class="title">freopen</span> <span class="params">( <span class="type">const</span> <span class="type">char</span> * filename, <span class="type">const</span> <span class="type">char</span> * mode, FILE * stream )</span></span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">freopen</span> (<span class="string">&quot;inputFile&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line"><span class="built_in">freopen</span> (<span class="string">&quot;outputFile&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多见 <a href="https://cplusplus.com/reference/cstdio/freopen/">https://cplusplus.com/reference/cstdio/freopen/</a></p><h2 id="随机函数"><a href="#随机函数" class="headerlink" title="随机函数"></a>随机函数</h2><p>可用于随机生成数据。</p><ol><li><p><code>rand ()</code> 函数</p><ul><li><p>头文件： <code>&lt;cstdlib&gt;</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 种子函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">srand</span> <span class="params">(<span class="type">unsigned</span> <span class="type">int</span> seed)</span></span>;</span><br><span class="line"><span class="comment">// 生成函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rand</span> <span class="params">(<span class="type">void</span>)</span></span>;</span><br><span class="line"><span class="comment">// 生成数字的最大值（宏）</span></span><br><span class="line">RAND_MAX</span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 使用 time () 函数设置随机数种子, 整个程序只需要设置一次 </span></span><br><span class="line"><span class="built_in">srand</span> ((<span class="type">unsigned</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要用到随机数时，直接调用 rand () 函数 </span></span><br><span class="line">cout &lt;&lt; <span class="built_in">rand</span> () &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写方便，但只能生成较小数字</p></li><li><p>更多见 <a href="https://cplusplus.com/reference/cstdlib/rand/">https://cplusplus.com/reference/cstdlib/rand/</a></p></li></ul></li><li><p><code>mt19937</code> 类型</p><ul><li><p>头文件： <code>&lt;random&gt;</code></p></li><li><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 生成一串名为 rand_num 的 mt19937 类型随机数</span></span><br><span class="line"><span class="function">mt19937 <span class="title">rand_num</span> <span class="params">((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>))</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出此串随机数 </span></span><br><span class="line">cout &lt;&lt; rand_num &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置随机数范围，名为 range </span></span><br><span class="line"><span class="function">uniform_int_distribution&lt;<span class="type">int</span>&gt; <span class="title">range</span><span class="params">(<span class="number">0</span>,<span class="number">100000</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在范围内输出一个随机数 </span></span><br><span class="line">cout &lt;&lt; <span class="built_in">range</span> (rand_num) &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 可转换为普通类型继续使用 </span></span><br><span class="line"><span class="type">int</span> n = <span class="built_in">range</span> (rand_num),</span><br><span class="line">m = <span class="built_in">range</span> (rand_num);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每次使用 range 生成的数字都不一样 </span></span><br><span class="line">cout &lt;&lt; n &lt;&lt; endl &lt;&lt; m &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写相对复杂，但在需要随机生成大数据时更为有效</p></li><li><p>更多见 <a href="https://cplusplus.com/reference/random/mt19937/">https://cplusplus.com/reference/random/mt19937/</a></p></li></ul></li></ol><h2 id="计时函数"><a href="#计时函数" class="headerlink" title="计时函数"></a>计时函数</h2><p>可用于检测程序运行时间、防止（模拟退火之类）程序超时。</p><p>使用 <code>&lt;ctime&gt;</code> 中的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">clock_t</span> <span class="title">clock</span> <span class="params">(<span class="type">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> st = <span class="built_in">clock</span> ();</span><br><span class="line"></span><br><span class="line"><span class="comment">// do something...</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ed = <span class="built_in">clock</span> ();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;time: %.3lfs&quot;</span>,(ed - st) / <span class="number">1000.0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多见 <a href="https://cplusplus.com/reference/ctime/clock/">https://cplusplus.com/reference/ctime/clock/</a></p><h2 id="程序对拍"><a href="#程序对拍" class="headerlink" title="程序对拍"></a>程序对拍</h2><p>在windows环境下使用 <code>fc</code> 等批处理命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">比较两个文件或两个文件集并显示它们之间</span><br><span class="line">的不同</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FC [/A] [/C] [/L] [/LBn] [/N] [/OFF[LINE]] [/T] [/U] [/W] [/nnnn]</span><br><span class="line">   [drive1:][path1]filename1 [drive2:][path2]filename2</span><br><span class="line">FC /B [drive1:][path1]filename1 [drive2:][path2]filename2</span><br><span class="line"></span><br><span class="line">  /A         只显示每个不同处的第一行和最后一行。</span><br><span class="line">  /B         执行二进制比较。</span><br><span class="line">  /C         不分大小写。</span><br><span class="line">  /L         将文件作为 ASCII 文字比较。</span><br><span class="line">  /LBn       将连续不匹配的最大值设置为指定</span><br><span class="line">             的行数。</span><br><span class="line">  /N         在 ASCII 比较上显示行数。</span><br><span class="line">  /OFF[LINE] 不要跳过带有脱机属性集的文件。</span><br><span class="line">  /T         不要将制表符扩充到空格。</span><br><span class="line">  /U         将文件作为 UNICODE 文本文件比较。</span><br><span class="line">  /W         为了比较而压缩空白(制表符和空格)。</span><br><span class="line">  /nnnn      指定不匹配处后必须连续</span><br><span class="line">             匹配的行数。</span><br><span class="line">  [drive1:][path1]filename1</span><br><span class="line">             指定要比较的第一个文件或第一个文件集。</span><br><span class="line">  [drive2:][path2]filename2</span><br><span class="line">             指定要比较的第二个文件或第二个文件集。</span><br></pre></td></tr></table></figure><p>示例：</p><ol><li><p>比较大样例与原程序输出</p><ul><li>准备好大样例文件</li><li>将原程序输出重定向至文件输出</li><li>编写以下代码：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">system</span> (<span class="string">&quot;fc sample.out program.out&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>观察程序输出</li></ul></li><li><p>暴力程序批量检查输出正确性</p><ul><li><p>准备好原程序与暴力程序，分别编译。</p></li><li><p>编写以下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">10000</span>;++i) &#123;</span><br><span class="line"><span class="built_in">system</span> (<span class="string">&quot;datamaker.exe &gt;data.in&quot;</span>);</span><br><span class="line"><span class="built_in">system</span> (<span class="string">&quot;std.exe &lt;data.in &gt;std.out&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> st = <span class="built_in">clock</span> ();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span> (<span class="string">&quot;program.exe &lt;data.in &gt;program.out&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> ed = <span class="built_in">clock</span> ();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">system</span> (<span class="string">&quot;fc std.out program.out&quot;</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;WA\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="built_in">printf</span> (<span class="string">&quot;AC #%d Time:%.3lfs\n&quot;</span>,i,(ed - st) / <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>观察程序输出</p></li></ul></li></ol><p>注：当文件比较成功时，指令返回 <code>0</code>。</p><h2 id="调整本地栈空间"><a href="#调整本地栈空间" class="headerlink" title="调整本地栈空间"></a>调整本地栈空间</h2><p><em><strong>（尽量不要使用）</strong></em></p><p>在编译选项中加入如下语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Wl,--stack=268435456</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ​学习笔记 </category>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
            <tag> C++ </tag>
            
            <tag> 比赛 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数论学习笔记</title>
      <link href="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86/number-theory-note/"/>
      <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86/number-theory-note/</url>
      
        <content type="html"><![CDATA[<h2 id="质数测试"><a href="#质数测试" class="headerlink" title="质数测试"></a>质数测试</h2><ul><li><p>$O(n^{\frac{1}{2}})$ 时间内测试质数</p></li><li><p>$O(n^{\frac{1}{3}})$ 时间内测试 <em><strong>Square-free</strong></em> 数 <a href="#note1">[1]</a></p><!-- + 思路:  --><blockquote><p>如果 $n$ 非 <em><strong>Square-free</strong></em> 数, 设 $n &#x3D; p^{2}q$</p><ol><li>若 $p \le q$, 则 $p^3 \le p^{2}q &#x3D; n$ , ${p \le n^{\frac{1}{3}}}$</li><li>若 $p &gt; q$, 则 $q^3 &lt; p^{2}q &#x3D; n$ , $q &lt; n^{\frac{1}{3}}$</li></ol></blockquote><ul><li>解法:<ol><li>枚举 $1 &lt; p \le n^{\frac{1}{3}}$ , 测试 $p^2$ 是否整除 $n$</li><li>枚举 $1 \le q &lt; n^{\frac{1}{3}}$ , 测试 $q$ 是否整除 $n$ 且 $\dfrac{n}{q}$ 是否为平方数</li></ol></li></ul></li><li><p>$O(n^{\frac{1}{2}})$ 内计算 $\sum_ {i &#x3D; 1}^n f\left(\left\lfloor\dfrac{n}{i}\right\rfloor\right)$</p><!-- + 思路:  --><blockquote><p>记录 $f\left(1\right)$ ~ $f\left(n\right)$ , 分别乘以在求和中出现的次数</p></blockquote><ul><li>代码:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i = n / (n / i) + <span class="number">1</span>)&#123;</span><br><span class="line">    result += <span class="built_in">f</span>(n / i) * (n / i - n / (i + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="质数筛"><a href="#质数筛" class="headerlink" title="质数筛"></a>质数筛</h2><ul><li><p>复杂度近似</p><ul><li>$\lim_ {n\to\infty}\sum_ {i &#x3D; 1}^n {\dfrac{1}{i}} &#x3D; O(\log n)$</li><li>$\lim_ {n\to\infty} \left \vert \mathbb{P} \cap \left[1,n\right] \right \vert &#x3D; O(\dfrac{n}{\log n})$ <a href="#note2">[2]</a></li><li>$\lim_ {n\to\infty}\sum_ {p \in \mathbb{P} \cap \left[1,n\right]} {\dfrac{1}{p}} &#x3D; O(\dfrac{\log n}{\log \log n})$</li></ul></li><li><p>$O(\dfrac{(R - L) \log \sqrt R}{\log \log \sqrt R} + \sqrt R)$ 时间内在 $\left[L, R\right]$ 之间寻找质数</p><blockquote><p>枚举 $\left[2, \sqrt R \right]$ 内的质数进行埃氏筛</p></blockquote></li><li><p>欧拉筛</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; primes;</span><br><span class="line"><span class="type">bool</span> notPrime = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n;++i)&#123;</span><br><span class="line">    notPrime[i] || primes.<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j : primes)&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="type">long</span> <span class="type">long</span>)i * j &gt; n) <span class="keyword">break</span>;</span><br><span class="line">        notPrime[i * j] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!(i % j)) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><a id = "2.4"> 给定 $n,k$ , 在 $O(n)$ 内计算 $1^k$ ~ $n^k$ </a></p><blockquote><p>将 $a^k &#x3D; (p_1p_2 \cdots p_q)^k$ $\left(a \notin \mathbb{P}, p_i \in \mathbb{P} \right)$ 转化为计算 $p_ {a_1}^kp_ {a_2}^k \cdots p_ {a_q}^k$ ,</p><p>需实现两个部分:</p><ul><li>快速幂计算 $p_i^k$ , 复杂度 $O(\dfrac{n}{\log n} \log n) &#x3D; O(n)$</li><li>欧拉筛出 $a^k$ , 复杂度 $O(n)$</li></ul><p>总复杂度为 $O(n)$</p></blockquote></li></ul><h2 id="分解因数"><a href="#分解因数" class="headerlink" title="分解因数"></a>分解因数</h2><ul><li><p>因数个数、因数之和</p><p>设 $n &#x3D; \prod_ {i&#x3D;1}^k p_i^{e_i}$ ,</p><p>记 $\sigma_0 \left(n \right)$ 为 $n$ 的因数个数, 有:</p><p>$$<br>\sigma_0 \left(n \right) &#x3D; \prod_ {i&#x3D;1}^k (e_i + 1)<br>$$</p><p>记 $\sigma_1 \left(n \right)$ 为 $n$ 的因数之和, 有:</p><p>$$<br>\sigma_1 \left(n \right) &#x3D; \prod_ {i&#x3D;1}^k \sum_ {j&#x3D;0}^{e_i} p_i^j &#x3D; \prod_ {i&#x3D;1}^k \dfrac{p^{e_i + 1} - 1}{p_i - 1}<br>$$</p><p>当 $\gcd (n,m) &#x3D; 1$ , $\sigma_0 \left(n \right)$ 和 $\sigma_1 \left(n \right)$ 满足如下性质:</p><p>$$<br>\sigma_0 \left(nm \right) &#x3D; \sigma_0 \left(n \right) \sigma_0 \left(m \right)<br>$$</p><p>$$<br>\sigma_1 \left(nm \right) &#x3D; \sigma_1 \left(n \right) \sigma_1 \left(m \right)<br>$$</p><ul><li>在 $O(n)$ 内计算 $\sigma_0 \left(1 \right)$ ~ $\sigma_0 \left(n \right)$ 与 $\sigma_1 \left(1 \right)$ ~ $\sigma_1 \left(n \right)$<blockquote><p>计算 $\sigma_0 \left(p_i \right) , \sigma_1 \left(p_i \right)$ $\left(p_i \in \mathbb{P} \right)$ 的值, 运用如上性质进行欧拉筛, 思路类似于<a href="#2.4">这题</a></p></blockquote></li></ul></li><li><p>给定 $m$ , 求 $\dfrac{1}{x} + \dfrac{1}{y} &#x3D; \dfrac{1}{m}$ 的解</p><!-- + 思路:  --><blockquote><p>分解 $m^2$ 的因数进行枚举</p></blockquote><ul><li><p>推理过程:</p><p>$$<br>\dfrac{1}{x} + \dfrac{1}{y} &#x3D; \dfrac{1}{m}<br>$$</p><p>$$<br>\implies xm + ym &#x3D; xy<br>$$</p><p>$$<br>\implies xm + ym - xy + m^2 &#x3D; m^2<br>$$</p><p>$$<br>\implies (x - m)(m - y) &#x3D; m^2 \\<br>$$</p></li><li><p><em><strong>Tips: $(x - m)$ , $(m - y)$ 可以为负数</strong></em></p></li></ul></li><li><p>通过分解质因数求 $gcd$ 和 $lcm$</p><p>设 $n &#x3D; \prod_ {i&#x3D;1}^k p_i^{e_i} , m &#x3D; \prod_ {i&#x3D;1}^k p_i^{f_i}$ , 则:</p><p>$$<br>\gcd (n,m) &#x3D; \prod_ {i&#x3D;1}^k p_i^{\min (e_i,f_i)}<br>$$</p><p>$$<br>\operatorname{lcm} (n,m) &#x3D; \prod_ {i&#x3D;1}^k p_i^{\max (e_i,f_i)}<br>$$</p></li></ul><h2 id="拓展欧几里得算法"><a href="#拓展欧几里得算法" class="headerlink" title="拓展欧几里得算法"></a>拓展欧几里得算法</h2><ul><li><p>解 $ax + by &#x3D; c$ $($有整数解当且仅当 $\gcd (a, b) \mid c$$)$</p><ol><li>当 $b &#x3D; 0$ , $\begin{cases} x &#x3D; \dfrac{c}{a} \\ y &#x3D; 0 \end{cases}$<br>为方程的一组整数解</li><li>当 $b &gt; 0$ , 令:</li></ol><p>$$<br>\begin{cases} a’ &#x3D; b \\ b’ &#x3D; a \bmod b &#x3D; a - a &#x2F; b * b \end{cases}<br>$$</p><p>求得 $a’x + b’y &#x3D; c$ 的一组整数解<br>$\begin{cases} x &#x3D; x’ \\ y &#x3D; y’ \end{cases}$<br>, 则</p><p>$$<br>x’ + b’y’ &#x3D; c<br>$$</p><p>$$<br>\implies bx’ + (a - a &#x2F; b * b)y’ &#x3D; c<br>$$</p><p>$$<br>\implies bx’ + ay’ - (a &#x2F; b * b)y’ &#x3D; c<br>$$</p><p>$$<br>\implies ay’ - b(x’ - (a &#x2F; b)y’) &#x3D; c<br>$$</p><p>$$<br>\implies \begin{cases} x &#x3D; y’ \\ y &#x3D; x’ - (a &#x2F; b)y’ \end{cases}<br>$$</p><p>此为 $ax + by &#x3D; c$ 的一组整数解</p><ul><li>代码:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c, <span class="type">int</span> &amp;x, <span class="type">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">    x = c / a; y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(c % a) x = y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> a; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> gcd = <span class="built_in">exgcd</span>(b, a % b, c, x, y);</span><br><span class="line">  x = x - (a / b - <span class="number">1</span>) * y;</span><br><span class="line">  y = x - y; x = x - y;</span><br><span class="line">  <span class="keyword">return</span> gcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>由特解推广至通解</p><p>假设其中一组整数解为</p><p>$$<br>\begin{cases} x &#x3D; x_0 \\ y &#x3D; y_0 \end{cases}<br>$$</p><p>则</p><p>$$<br>\begin{cases} x &#x3D; x_0 + \dfrac{b}{\gcd (a,b)}t \\ y &#x3D; y_0 - \dfrac{a}{\gcd (a,b)}t \end{cases} , t \in \mathbb{Z}<br>$$</p><p>为该方程的所有整数解</p></li><li><p>解 $ax \equiv c \pmod m$</p><blockquote><p>等价于解 $ax - my &#x3D; b$</p></blockquote><p>当 $c &#x3D; 1$ 时, $x$ 为 $a$ 在模 $p$ 意义下的乘法逆元, 记作 $a^{-1}$</p></li></ul><h2 id="求乘法逆元"><a href="#求乘法逆元" class="headerlink" title="求乘法逆元"></a>求乘法逆元</h2><ul><li><p>拓展欧几里得算法</p><ul><li>优点: 当 $a \bot p$ (互质), 但 $p$ 不是质数时同样适用</li><li>代码:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> &amp;x, <span class="type">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b) x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">exgcd</span>(b, a % b, y, x), y -= a / b * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    <span class="built_in">exgcd</span>(a, p, x, y);</span><br><span class="line">    x = (x % p + p) % p;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>费马小定理+快速幂算法</p><p>$$<br>a^{p - 1} \equiv 1 \pmod p<br>$$</p><p>故有</p><p>$$<br>a * x \equiv 1 \pmod p<br>$$</p><p>$$<br>\implies a * x \equiv a ^ {p-1} \pmod p<br>$$</p><p>$$<br>\implies x \equiv a^{p-2} \pmod p<br>$$</p><ul><li>优点: 较扩展欧几里得算法更易实现</li><li>代码:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fpm</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> p, <span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    x %= m;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;p;p &gt;&gt;= <span class="number">1</span>, (x *= x) %= m)</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) (ans *= x) %= m;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="built_in">fpm</span>(a, p - <span class="number">2</span>, p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>线性算法</p><p>$$<br>1^{-1}\equiv 1 \pmod p<br>$$</p><p>设</p><p>$$<br>p &#x3D; k * i + r, 1 &lt; r &lt; i &lt; p<br>$$</p><p>有</p><p>$$<br>k * i + r \equiv 0 \pmod p<br>$$</p><p>$$<br>\implies k * r^{-1} + i^{-1} \equiv 0 \pmod p<br>$$</p><p>$$<br>\implies i^{-1} \equiv -k * r^{-1} \pmod p<br>$$</p><p>$$<br>\implies i^{-1} \equiv -\lfloor \frac{p}{i} \rfloor * (p \bmod i)^{-1} \pmod p<br>$$</p><ul><li>优点:<ul><li>$O(\log a)$ 内计算 $a^{-1}$</li><li>$O(n)$ 内计算 $1^{-1}$ ~ $n^{-1}$</li></ul></li><li>代码:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归计算</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">inv</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i ^ <span class="number">1</span> ? (<span class="type">long</span> <span class="type">long</span>)(p - p / i) * <span class="built_in">inv</span>(p % i) % p : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动规计算</span></span><br><span class="line">inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt; p;++i)</span><br><span class="line">    inv[i] = (<span class="type">long</span> <span class="type">long</span>)(p - p / i) * inv[p % i] % p;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="勒让德公式"><a href="#勒让德公式" class="headerlink" title="勒让德公式"></a>勒让德公式</h2><ul><li><p>记 $e_p \left(n \right)$ 为 $n!$ 中 $p$ 的指数:</p><p>$$<br>e_p \left(n \right) &#x3D; \sum_ {1 \le k} \lfloor \dfrac{n}{p^k} \rfloor &#x3D; \lfloor \dfrac{n}{p} \rfloor + \lfloor \dfrac{n}{p^2} \rfloor + \cdots<br>$$</p></li><li><p>给定 $n, m, p, k$ , 其中 $p$ 为质数, 检查 $\dbinom{n}{m}$ 是否被 $p^k$ 整除</p><blockquote><p>即检查 $e_p\dbinom{n}{m}$ 是否 $\ge k$</p></blockquote></li><li><p>对于 $p$ 为质数, $0 &lt; i &lt; p$ 有:</p><p>$$<br>\dbinom{p}{i} \equiv 0 \pmod p<br>$$</p><ul><li>证明:<br>$$<br>e_p\dbinom{p}{i} &#x3D; e_p\dbinom{p!}{i!(p - i)!} &#x3D; e_p(p) - e_p(i) - e_p(p - i) &#x3D; 1 - 0 - 0 &#x3D; 1<br>$$</li><li>重要推论:<br>$$<br>(1 + z)^p \equiv 1 + z^p \pmod p<br>$$</li></ul></li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><font size = 2><p><a id = "note1"> [1]: <em><strong>Square-free</strong></em> 数, 指没有平方因子的数 </a></p><p><a id = "note2"> [2]: $\mathbb{P}$ 表示质数集合, 下同 </a></p></font>]]></content>
      
      
      <categories>
          
          <category> ​学习笔记 </category>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
            <tag> C++ </tag>
            
            <tag> 学习 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钓鱼</title>
      <link href="/%E6%9D%82%E6%96%87/%E8%AF%97/Fishing/"/>
      <url>/%E6%9D%82%E6%96%87/%E8%AF%97/Fishing/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="218f93a0c2386484cc4f5727e7091cbc504d2cb050548c83e35debe8fd4b6cbb">9c96250a0fc122000391f3b1eecbd29c06e0f8b5437e66c4123024862db677b66b86a83e4ca21c4d8621772771f1875eb16627cdfef27dd77a78d9d1a64f8c3dd0a093887e407d25dbb64b47e4d81db61825e8975c0a7d580a4197bfc5a8feb4ddcc971c2bc69b8e48c8a6a8c90e87aa29908ba79492c0f2af0e2ebf913fc3a4907a49452a91145bb004b3b436aa3aabd8ad2012f7d64efd9f4d9d945a23c7133dcb60146d443c55eb32e441abd52a3d5b15cb2067eca894a18b99662a8ca8091a088e89fc6628fe3fadd1d359979a654e10b76ce8a5e08169ebe3dd2d31cdb25dfe634f7efab5e68fab6ee95fc072d3596e30722bbdd84934582dcc44e9f16540858ae6163f42f2dacf76d86b1834ab09d63fd0e34176e9855e9b83def26a4cc1574aa3528bd33e76e0f501a6bc6569d40d838f579fc461c655f7e7d2eb702b26f065f07354c8c6e7cc6f4d8555128491b815df215116a7ddebcbdf5e0831d67817bfefbe0bdf8b19e53f4f9e01c75d07dfad0d7a0b440d8dc90bd7fc8adeb822108d62fef39925ae67bd9dd4a2ab4d0ce69113458e0290a7b5cb512bfa6b4f52afc53bdaf3b61bde69f9ecb313bac7261688c40de281b27dcc8d93f8088537c1d0affbe42c1a3c1a00fb18746e20239eb0b81f619ff7f4fd22417ff571cdd0af72ed97c919a4408d2c7a1234c390268651cf477e71b427044fde69f31224366f68762851a2197b469237fa0aed69caf2a356fcb1e1708fb6b9d6543a7aa0a33eb53a5d6f0e36c28893c575b034ab80f193baf05a0da651080fecde4a021ef43d86826d13be5f853f181e81c2a2daf93d3bb3d301c485514662b15f30974f3e1221579a324c3b6fd45fdd90a554c7c1ad1f8bc5e2e0df141295caf31a2f44a2421ae264818e7259b057c72a6d339afc93b71f3c2d954a5dde5dabb0036638c5fc573c170dd853ff5256a7c8ef36ea1c08888747b0e8aed6c66484a9b1c3773e3ec5937b1ee2984ccad437fe32fe058eab1968f26bb35d8bb926f4d2b38ade1fb9afb7405a2c37130886551830e53079fd9ed101567c2a84037fa3265615f35d26d24e6760e5aed2664bdc4de95e0e2252345b73177b074a63e908527c37fa410f248543702786062c081acff2d2580d787ba3296cb07a29cf3e1a924dcf5ccd0db4108c1a9c52e79ff0ca833bffde3e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 一些感想 </tag>
            
            <tag> 🙈🙈🙈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面显示测试</title>
      <link href="/%E5%85%B6%E5%AE%83/page-test/"/>
      <url>/%E5%85%B6%E5%AE%83/page-test/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>以上是一级标题</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>以上是二级标题</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p><strong>粗体1</strong> <strong>粗体2</strong></p><p><em>斜体1</em> <em>斜体2</em></p><blockquote><p>引用块</p><ol><li>引用有序列表</li><li>引用有序列表</li><li>引用有序列表</li></ol><ul><li>引用无序列表</li><li>引用无序列表</li><li>引用无序列表</li></ul><blockquote><p>嵌套引用块<br>嵌套引用块<br>嵌套引用块</p></blockquote></blockquote><ol><li>有序列表<ol><li>嵌套有序列表<ol><li>嵌套有序列表</li><li>嵌套有序列表</li><li>嵌套有序列表</li></ol></li><li>嵌套有序列表<ul><li>嵌套无序列表</li><li>嵌套无序列表</li><li>嵌套无序列表</li></ul></li><li>嵌套有序列表<blockquote><p>嵌套引用块</p></blockquote></li></ol></li><li>有序列表<ul><li>嵌套无序列表</li><li>嵌套无序列表</li><li>嵌套无序列表</li></ul></li><li>有序列表<blockquote><p>嵌套引用块</p></blockquote></li></ol><ul><li>无序列表<ul><li>嵌套无序列表<ul><li>嵌套无序列表</li><li>嵌套无序列表</li><li>嵌套无序列表</li></ul></li><li>嵌套无序列表<ol><li>嵌套有序列表</li><li>嵌套有序列表</li><li>嵌套有序列表</li></ol></li><li>嵌套无序列表<blockquote><p>嵌套引用块</p></blockquote></li></ul></li><li>无序列表<ol><li>嵌套有序列表</li><li>嵌套有序列表</li><li>嵌套有序列表</li></ol></li><li>无序列表<blockquote><p>嵌套引用块</p></blockquote></li></ul><ul><li>无序列表 (-)</li><li>无序列表 (-)</li><li>无序列表 (-)</li></ul><ul><li>无序列表 (+)</li><li>无序列表 (+)</li><li>无序列表 (+)</li></ul><ul><li>无序列表 (*)</li><li>无序列表 (*)</li><li>无序列表 (*)</li></ul><p><code>行内代码块</code><br><code>行内代码块包裹 `反引号`</code></p><p>以下是分割线</p><hr><hr><hr><p>以上是分割线</p><p>这是一个<a href="https://markdown.com.cn/">链接</a></p><p><a href="https://markdown.com.cn/" title="Markdown语法">链接</a> 悬停显示文字</p><p>这也是一个链接 <a href="https://markdown.com.cn/">https://markdown.com.cn/</a></p><p><strong><a href="https://markdown.com.cn/">粗体</a></strong> 链接</p><p><em><a href="https://markdown.com.cn/">斜体</a></em> 链接</p><p><a href="https://markdown.com.cn/"><code>代码</code></a> 链接</p><p><a href="https://markdown.com.cn/" title="Markdown语法">引用类型链接</a></p><p><img src="https://cdn.seovx.com/d/?mom=302" alt="图片"></p><p>以上是图片</p><p><a href="https://markdown.com.cn/"><img src="https://moe.jitsu.top/img/" alt="链接图片"></a></p><p>以上是链接图片</p><h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><table><thead><tr><th>表格</th><th>默认</th><th align="left">左对齐</th><th align="center">居中对齐</th><th align="right">右对齐</th></tr></thead><tbody><tr><td>行1</td><td>列1</td><td align="left">列2</td><td align="center">列3</td><td align="right">列4</td></tr><tr><td>行2</td><td>列1</td><td align="left">列2</td><td align="center">列3</td><td align="right">列4</td></tr><tr><td>行3</td><td>列1</td><td align="left">列2</td><td align="center">列3</td><td align="right">列4</td></tr><tr><td>行4</td><td>列1</td><td align="left">列2</td><td align="center">列3</td><td align="right">列4</td></tr></tbody></table><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 围栏代码块</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="built_in">printf</span> (<span class="string">&quot;HELLO WORLD!&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- 脚注[^foot] --><dl><dt>定义列表</dt><dd>定义内容</dd><dd>定义内容</dd><dd>定义内容</dd></dl>~~删除线~~<p>任务列表</p><ul><li><input checked="" disabled="" type="checkbox"> 已完成</li><li><input disabled="" type="checkbox"> 未完成</li><li><input disabled="" type="checkbox"> 未完成</li></ul><p>自动网址链接: <a href="https://markdown.com.cn/">https://markdown.com.cn/</a><br>禁用自动网址: <code>https://markdown.com.cn/</code></p><h1 id="LaTeX"><a href="#LaTeX" class="headerlink" title="$\LaTeX$"></a>$\LaTeX$</h1><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><p>$ 普通公式 $</p><p>$ \begin{aligned} 普通 \\ 换行 \end{aligned} $ </p><p>$$ 居中公式 $$</p><p>$$ \begin{aligned} 居中 \\ 换行 \end{aligned} $$</p><h2 id="初等运算"><a href="#初等运算" class="headerlink" title="初等运算"></a>初等运算</h2><p>$$<br>\begin{align*}<br>a + b \ \ \ \ a - b \ \ \ \ a \times b \ \ \ \ a \div b \\<br>a \cdot b \ \ \ a^b \ \ \sqrt[b]{a} \ \ \ \log_a b \ \ \exp_a b<br>\end{align*}<br>$$</p><p>$$<br>\sin x \ \ \cos x \ \ \tan x \ \ \sec x \ \ \csc x \ \ \cot x<br>$$</p><p>$$<br>\arcsin x \ \ \arccos x \ \ \arctan x \\<br>$$</p><h2 id="求和求积公式"><a href="#求和求积公式" class="headerlink" title="求和求积公式"></a>求和求积公式</h2><p>$$<br>\sum_ {k&#x3D;1}^n k &#x3D; \frac{1}{2} n (n+1)<br>$$</p><p>$$<br>\sin z &#x3D; z \prod_ {k&#x3D;1}^{\infty} \left(1-\dfrac{z^2}{k^2\pi^2}\right)<br>$$</p><h2 id="矩阵行列式"><a href="#矩阵行列式" class="headerlink" title="矩阵行列式"></a>矩阵行列式</h2><p>$$<br>\begin{gather*}<br>\begin{matrix} 0 &amp; 1 \\ 1 &amp; 0 \end{matrix}\quad<br>\begin{pmatrix} 0 &amp; -i \\ i &amp; 0 \end{pmatrix}\\<br>\begin{bmatrix} 0 &amp; -1 \\ 1 &amp; 0 \end{bmatrix}\quad<br>\begin{Bmatrix} 1 &amp; 0 \\ 0 &amp; -1 \end{Bmatrix}\\<br>\begin{vmatrix} a &amp; b \\ c &amp; d \end{vmatrix}\quad<br>\begin{Vmatrix} i &amp; 0 \\ 0 &amp; -i \end{Vmatrix}<br>\end{gather*}<br>$$</p><h2 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h2><h3 id="定积分"><a href="#定积分" class="headerlink" title="定积分"></a>定积分</h3><p>$$ \mathop {\int} \nolimits _a^b f { \left( {x} \right) } \text{d} x &#x3D; -\mathop {\int} \nolimits _b^a f { \left( {x} \right) } \text{d} x $$</p><h3 id="不定积分"><a href="#不定积分" class="headerlink" title="不定积分"></a>不定积分</h3><p>$$<br>\begin{align*}<br>&amp; \int k \text{d} x &#x3D; kx + C \\<br>&amp; \int \mathop{x} ^{\mu} \text{d} x &#x3D; \frac{ \mathop{x} ^{\mu + 1} }{\mu + 1} + C, \ \mu \neq -1 \\<br>&amp; \int \frac{1}{x} \text{d} x &#x3D; \ln { \left| {x} \right| } + C \\<br>&amp; \int \frac{1}{1 + \mathop{x}^2} \text{d} x &#x3D; \arctan x + C\\<br>&amp; \int \frac{1}{\sqrt{1 - \mathop{x}^2}} \text{d} x &#x3D; \arcsin x + C<br>\end{align*}<br>$$</p><h3 id="曲线积分"><a href="#曲线积分" class="headerlink" title="曲线积分"></a>曲线积分</h3><p>$$<br>\begin{align*}<br>&amp; {L&#x3D;\mathop{L}\nolimits_ { {1} }+\mathop{L}\nolimits_2 \Rightarrow \mathop{ \int }\nolimits_ {L}f{ \left( {x,y} \right) } \text{d} s&#x3D;\mathop{ \int }\nolimits_ { {\mathop{L}\nolimits_ { {1} } } }f{ \left( {x,y} \right) } \text{d} s+\mathop{ \int }\nolimits_ { {\mathop{L}\nolimits_2} }f{ \left( {x,y} \right) } \text{d} s} \\<br>&amp; {\mathop{ \iint }\nolimits_ {L}{ \left[ { \alpha f{ \left( {x,y} \right) }+ \beta f{ \left( {x,y} \right) } } \right] } \text{d} s&#x3D; \alpha \mathop{ \iint }\nolimits_ {L}f{ \left( {x,y} \right) } \text{d} s+ \beta \mathop{ \iint }\nolimits_ {L}f{ \left( {x,y} \right) } \text{d} s} \\<br>&amp; {f{ \left( {x,y} \right) } \le g{ \left( {x,y} \right) } \Rightarrow \mathop{ \iint }\nolimits_ {L}f{ \left( {x,y} \right) } \text{d} s \le \mathop{ \iint }\nolimits_ {L}g{ \left( {x,y} \right) } \text{d} s} \\<br>&amp; { \left| {\mathop{ \iint }\nolimits_ {L}f{ \left( {x,y} \right) } \text{d} s} \left|  \le \mathop{ \iint }\nolimits_ {L}{ \left| {f{ \left( {x,y} \right) } } \right| } \text{d} s\right. \right. }<br>\end{align*}<br>$$</p><!--# 其它## HTML 代码块<details class="custom-block details" style="display: block; position: relative; border-radius: 2px; margin: 1.6em 0px; padding: 1.6em; background-color: rgb(238, 238, 238); color: rgb(44, 62, 80); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="outline: none; cursor: pointer;">Code (C++)</summary><pre><code class="language-cpp"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="built_in">printf</span> (<span class="string">&quot;HELLO WORLD!&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></code></pre></details></p><p>–&gt;</p><!-- [^foot]: 这是脚注。 -->]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OIer人生</title>
      <link href="/%E5%85%B6%E5%AE%83/OIer-life/"/>
      <url>/%E5%85%B6%E5%AE%83/OIer-life/</url>
      
        <content type="html"><![CDATA[<a href="https://www.zhihu.com/question/31831399/answer/100876490"><blockquote><p>我们都是行走在镜面边缘的人。<br>低下头看到的，是半个迷茫的自己，和半个不见底的深渊。</p><footer><strong>——以此献给所有OIer，以及所有竞赛生，以及所有为梦想而不顾一切的人。</strong></footer></blockquote></a><span id="more"></span><hr><p>理想在哪里？未来在哪里？</p><p>当初我们或犹豫或坚决地走上了学科竞赛这条路，在现实的大门面前。</p><p>我们有着这样那样的理由，或者是兴趣，或者是保送。</p><p>但是在我们踏上这条路的时候，几乎就没有了退路。</p><p>学科竞赛是一条难以预料的路。就算你有超神的实力，也会考出2B的成绩。</p><p>虽然高考也是，但我想高考还不及学科竞赛这样难以捉摸。</p><p>数学二试，只有4道大题，一道大题40或50分，基本拿不到过程分，要么就是做出来，要么就是做不出来。高考一道题，不会让你从一本A类栽倒二本；而数学一道题，可能就是保送和二等的区别。</p><p>信息国赛，每试5个小时3道题，一道100分；更忐忑的是，数学你写错一个字可能还会蒙混过关，但在信息竞赛里，打错一个字，很可能100分的程序就是零蛋。因为失误丢掉一百多分的例子，比比皆是。</p><p>如果只是这样，也就算了；如果只是付出不一定得到回报，也就算了。</p><p>竞赛的苦不在出成绩的那一刻；你要付出的，也远远不是考砸的几滴泪水。</p><p>没有战友。没有同伴。一群同是天涯沦落人的OIer，在网上结识，互相鼓励，一同努力。</p><p>而当你掐掉本机电源回到现实的时候，是鄙夷的老师，是遥远的同学，是叹息的家长，是堆积成山的小卷子，是不堪入目的月考分。</p><p>高考是主流，竞赛是非主流，而学信息的更是非主流中的非主流。</p><p>“学那有什么用？高考又不考。”</p><p>看到高考生捧着一张张流光溢彩的月考卷子，只有一声叹息。</p><p>看到数学（物理&#x2F;化学&#x2F;生物）老师赞许地看看那些上课看数学（物理&#x2F;化学&#x2F;生物）竞赛的尖子，只有一声叹息。</p><p>看到其他学科竞赛的同学三五成群激烈地讨论，还是只有一声叹息。</p><p>自习课，班主任抽走来不及藏的《算法设计》，面无表情地“你下课来一趟”。</p><p>考试后，同学小心翼翼地发给你一张满是红叉的卷子。</p><p>遇到难题不会做时，一个人苦思冥想，看着QQ里的灰色头像，不知该求助谁。</p><p>因为条件所限，只能在晚自习回家后编码到半夜，第二天头晕脑胀地再去学勒夏特列原理。</p><p>最难过的是父母一次次地无奈询问，“现在文化课还能跟得上么？不行就别学了……”</p><p>……</p><p>大家都说，高考是千军万马过独木桥，不容易。</p><p>可是又有几个“大家”知道，竞赛是一个人摸黑走路，盲人骑瞎马，半夜临深池？</p><p>在无数个孤独清冷的深夜，无数次羡慕已经安然入梦的同学们。</p><p>我们都是行走在镜面边缘的人。</p><p>低下头看到的，是半个迷茫的自己，和半个不见底的深渊。</p><p>到哪里，会不会跌倒，是到终点还是滑进深渊，都不知道。</p><p>唯一确定的是，自己只有一个人。</p><p>世界上有天才，这无可否认；</p><p>但天才不是我，想到终点，只有靠努力。</p><p>所以从高一开始就过上高三的生活，所以无奈地跟社团活动集体活动等等等等说再见。</p><p>所以从高一开始就习惯在半夜以后入睡，习惯一个人在寒冷的夜里机械地敲动手指，而双脚因为长时间坐姿已经冰凉。</p><p>戒掉游戏。戒掉小说。戒掉感情。戒掉漫画。戒掉泡吧。最终甚至戒掉文化课。</p><p>这就是OIer的选择。</p><p>只剩下孤身一人的卑微，和遍体鳞伤的坚强。</p><p>选择了做一名OIer，就选择了要孤独，要坚强，要百折不挠，要在跌倒之后擦干血和泪，继续在无尽的夜里走下去。</p><p>六月份省选，八月份全国赛，能走多远，我不知道。</p><p>镜面的边缘，滑一步就是万丈深渊。</p><p>为了兴趣或者为了保送——总之我们赌上了我们的高中。</p><p>记得有一次，一个家长讽刺我说，“计算机竞赛有什么了不起，数学物理拿了保送才叫真本事。”</p><p>更多的家长讽刺说，“竞赛拿保送有什么了不起，高考才是真本事。”</p><p>本事你妹。没什么了不起，您来试试？或者您家公子来试试？</p><p>可是冷静下来，这就是竞赛生，以至OIer的现状。</p><p>不成功没人看得起。成功了还是没人看得起。</p><p>老师看不起，家长看不起，有些同学也看不起。</p><p>总之就是没人看得起。</p><p>你可以说，这是潇洒，逍遥，特立独行。</p><p>但心里清楚，这是孤独，卑微，前途暗淡。</p><p>虽然这也让我们多了一份磨砺，多了一份坚强。</p><p>物理竞赛吧有人说，PhO makes a man man.</p><p>我想不管哪一门竞赛都是一样。</p><p>5月生物联赛。6月信息省选。8月信息全国赛。9月物理化学联赛。10月数学联赛。</p><p>选择竞赛，选择OI，既是痛苦，亦是福祉。</p><blockquote class="pullquote"><p>转载自 <a href="https://www.zhihu.com/question/31831399/answer/100876490">成为一个OIer／当过一个OIer是一种怎样的体验？ - 知乎</a>，有删改</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World!</title>
      <link href="/%E5%85%B6%E5%AE%83/Welcome/"/>
      <url>/%E5%85%B6%E5%AE%83/Welcome/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-To-My-Blog"><a href="#Welcome-To-My-Blog" class="headerlink" title=" Welcome To My Blog! "></a><div align="center"><a title="Welcome" ></a> Welcome To My Blog! </div></h1><p align="center">没事儿写点东西，记录学习。<br><!-- <p align="center">  <img src="/images/photos/mobile/1.jpg">  <img src="/images/photos/mobile/2.jpg">  <img src="/images/photos/mobile/3.jpg">  <img src="/images/photos/mobile/4.jpg"><br> --><p align="center">    <img src="/images/photos/mobile/1.jpg" id="image"><br><script>    var rand = () => Math.floor (Math.random () * 0x3f3f3f3f);    function image () {        var image = document.getElementById ("image");        image.src = "/images/photos/mobile/" + (rand () % 6) + ".jpg";    };    setInterval (image, 5000);</script>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
